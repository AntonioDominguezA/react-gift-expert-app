{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","item","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,UACI,+BAAMD,EAAN,OACA,uBACIQ,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IACzB,OACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAMP,EAAIR,IAAMgB,IAAMR,EAAIE,QAC/B,4BAAKF,EAAIE,YCFRO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,IASIC,EDlB2BK,CAAc1B,GAAlCa,EAJuB,EAI7BN,KAAca,EAJe,EAIfA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,CAA4BA,IAAMA,GAAfA,EAAIC,aEfzCgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAU9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ2C,EAAWnB,KAAI,SAAAoB,GACX,OAAO,cAAC,EAAD,CAEC7B,SAAW6B,GADLA,Y,MCnBtCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.51912210.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) { \r\n            setcategories( cat => [inputValue, ...cat ] )\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h1>{ inputValue } </h1>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange  }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=vOGlvcLr1AQxqC2Q1xCOD5sxec99iD5A`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ img.url } alt={ img.title } />\r\n            <p>{ img.title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return <GifGridItem key={ img.id } img={ img } />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, []);\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data: [1, 2, 3, 4, 5],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Puch', 'Marvel', 'Goku'];\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setcategories( [...categories, 'Nuevo'] );\r\n    //     setcategories( cat => [...cat, 'Nuevo'] );\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h1>Gif Expert App</h1>\r\n            <AddCategory setcategories={ setcategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(item => {\r\n                        return <GifGrid \r\n                                key={ item } \r\n                                category={ item } \r\n                            />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}